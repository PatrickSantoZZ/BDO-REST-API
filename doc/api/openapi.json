{
	"openapi": "3.0.2",
	"info": {
		"title": "BDO REST API",
		"version": "v1"
	},
	"servers": [
		{
			"url": "http://localhost:8001/v1"
		}
	],
	"components": {
		"schemas": {
			"familyName": {
				"type": "string",
				"example": "Apple"
			},
			"profileTarget": {
				"type": "string",
				"example": "XXX"
			},
			"region": {
				"type": "string",
				"enum": ["EU", "NA"]
			},
			"guildName": {
				"type": "string",
				"example": "TumblrGirls"
			},
			"createdOn": {
				"type": "string",
				"example": "2020-02-23T00:00:00Z"
			}
		},
		"parameters": {
			"region": {
				"name": "region",
				"in": "query",
				"required": true,
				"schema": {
					"$ref": "#/components/schemas/region"
				}
			},
			"query": {
				"name": "query",
				"in": "query",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"page": {
				"name": "page",
				"in": "query",
				"required": false,
				"schema": {
					"type": "number",
					"default": 1
				}
			}
		},
		"responses": {
			"404": {
				"description": "Not Found."
			},
			"503": {
				"description": "BDO servers are currently under maintenance and requested data is not cached."
			}
		}
	},
	"paths": {
		"/adventurer?profileTarget={profileTarget}": {
			"get": {
				"description": "Retrieve player profile.",
				"summary": "Retrieve player profile.",
				"operationId": "getAdventurer",
				"parameters": [
					{
						"name": "profileTarget",
						"in": "query",
						"description": "Desired player's profileTarget. You can get this string from guild members data or from player search.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Profile",
									"type": "object",
									"properties": {
										"familyName": {
											"$ref": "#/components/schemas/familyName"
										},
										"profileTarget": {
											"$ref": "#/components/schemas/profileTarget"
										},
										"region": {
											"$ref": "#/components/schemas/region"
										},
										"guild": {
											"properties": {
												"name": {
													"$ref": "#/components/schemas/guildName"
												}
											}
										},
										"contributionPoints": {
											"type": "number",
											"example": 100
										},
										"createdOn": {
											"$ref": "#/components/schemas/createdOn"
										},
										"characters": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string",
														"example": "Blue"
													},
													"class": {
														"type": "string",
														"example": "Ninja"
													},
													"main": {
														"type": "boolean",
														"example": true
													},
													"level": {
														"type": "number",
														"example": 56
													},
													"specLevels": {
														"properties": {
															"gathering": {
																"type": "string",
																"example": "Beginner 6"
															},
															"fishing": {
																"type": "string",
																"example": "Master 18"
															},
															"hunting": {
																"type": "string",
																"example": "Beginner 1"
															},
															"cooking": {
																"type": "string",
																"example": "Beginner 4"
															},
															"alchemy": {
																"type": "string",
																"example": "Beginner 1"
															},
															"processing": {
																"type": "string",
																"example": "Beginner 9"
															},
															"training": {
																"type": "string",
																"example": "Apprentice 1"
															},
															"trading": {
																"type": "string",
																"example": "Apprentice 3"
															},
															"farming": {
																"type": "string",
																"example": "Beginner 1"
															},
															"sailing": {
																"type": "string",
																"example": "Beginner 1"
															},
															"barter": {
																"type": "string",
																"example": "Beginner 1"
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/adventurer/search?region={region}&query={query}&searchType={searchType}&page={page}": {
			"get": {
				"description": "Search for player.",
				"summary": "Search for player.",
				"operationId": "getAdventurerSearch",
				"parameters": [
					{
						"$ref": "#/components/parameters/region"
					},
					{
						"$ref": "#/components/parameters/query"
					},
					{
						"name": "searchType",
						"in": "query",
						"description": "Type of search.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": ["familyName", "characterName"]
						}
					},
					{
						"$ref": "#/components/parameters/page"
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Profile",
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"familyName": {
												"$ref": "#/components/schemas/familyName"
											},
											"profileTarget": {
												"$ref": "#/components/schemas/profileTarget"
											},
											"region": {
												"$ref": "#/components/schemas/region"
											},
											"guild": {
												"properties": {
													"name": {
														"$ref": "#/components/schemas/guildName"
													}
												}
											},
											"characters": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string",
															"example": "Blue"
														},
														"class": {
															"type": "string",
															"example": "Ninja"
														},
														"level": {
															"type": "number",
															"example": 56
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/guild?guildName={guildName}&region={region}": {
			"get": {
				"description": "Retrieve guild profile.",
				"summary": "Retrieve guild profile.",
				"operationId": "getGuild",
				"parameters": [
					{
						"name": "guildName",
						"in": "query",
						"description": "Desired guild's name.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"$ref": "#/components/parameters/region"
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "Guild",
									"type": "object",
									"properties": {
										"name": {
											"$ref": "#/components/schemas/guildName"
										},
										"region": {
											"$ref": "#/components/schemas/region"
										},
										"createdOn": {
											"$ref": "#/components/schemas/createdOn"
										},
										"master": {
											"type": "object",
											"properties": {
												"familyName": {
													"$ref": "#/components/schemas/familyName"
												},
												"profileTarget": {
													"$ref": "#/components/schemas/profileTarget"
												}
											}
										},
										"members": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"familyName": {
														"$ref": "#/components/schemas/familyName"
													},
													"profileTarget": {
														"$ref": "#/components/schemas/profileTarget"
													}
												}
											}
										},
										"population": {
											"type": "number",
											"example": 1
										},
										"occupying": {
											"type": "string",
											"example": "Mediah Territory"
										}
									}
								}
							}
						}
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		},
		"/guild/search?region={region}&query={query}&page={page}": {
			"get": {
				"description": "Search for guild.",
				"summary": "Search for guild.",
				"operationId": "getGuildSearch",
				"parameters": [
					{
						"$ref": "#/components/parameters/region"
					},
					{
						"$ref": "#/components/parameters/query"
					},
					{
						"$ref": "#/components/parameters/page"
					}
				],
				"responses": {
					"200": {
						"description": "OK.",
						"content": {
							"application/json": {
								"schema": {
									"title": "GuildSearchResult",
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"$ref": "#/components/schemas/guildName"
											},
											"region": {
												"$ref": "#/components/schemas/region"
											},
											"createdOn": {
												"$ref": "#/components/schemas/createdOn"
											},
											"master": {
												"type": "object",
												"properties": {
													"familyName": {
														"$ref": "#/components/schemas/familyName"
													},
													"profileTarget": {
														"$ref": "#/components/schemas/profileTarget"
													}
												}
											},
											"kind": {
												"type": "string",
												"example": "Guild"
											},
											"population": {
												"type": "number",
												"example": 1
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"$ref": "#/components/responses/404"
					},
					"503": {
						"$ref": "#/components/responses/503"
					}
				}
			}
		}
	}
}
